# ~/.bashrc: configuration file for interactive bash(1) shells

[ -f /etc/bashrc ] && . /etc/bashrc # Source global definitions
[[ $- != *i* ]]    && return        # Do nothing if this is not an interactive shell

# Aliases
case `uname -s` in
  Darwin|*BSD*)
    alias ls='ls -G'                      # colorize `ls` output (BSD/Mac version)
    ;;
  *)
    eval `dircolors -b`                   # colorize `ls` output (GNU version)
    alias ls='ls --color=auto'
    ;;
esac

alias c='cd'
alias l='ls'
alias lsd='ls -F | grep \/ | sort'            # list only dirs, alphabetically
alias rmb='rm *~'                             # remove emacs backup files
alias rmbr="find . -name '*~' -exec rm {} \;" # recursive version of above
alias ssh='ssh -C'                            # enable compression
alias gitx='gitx --all'
alias e='emacsclient'
alias o='open .'                              # open the current location in the Mac OS Finder

alias gs='git status'
alias gd='git diff'
alias gdc='git diff --cached'
alias gc='git commit'
alias ga='git add'
alias gl='git log'

alias cs='cd ~/src/my'
alias cn='cd ~/Writings/notes'

# Configure Colors
export GREP_OPTIONS='--color=auto'

export COLOR_WHITE='\033[1;37m'
export COLOR_LIGHTGRAY='033[0;37m'
export COLOR_GRAY='\033[1;30m'
export COLOR_BLACK='\033[0;30m'
export COLOR_RED='\033[0;31m'
export COLOR_LIGHTRED='\033[1;31m'
export COLOR_GREEN='\033[0;32m'
export COLOR_LIGHTGREEN='\033[1;32m'
export COLOR_BROWN='\033[0;33m'
export COLOR_YELLOW='\033[1;33m'
export COLOR_BLUE='\033[0;34m'
export COLOR_LIGHTBLUE='\033[1;34m'
export COLOR_PURPLE='\033[0;35m'
export COLOR_PINK='\033[1;35m'
export COLOR_CYAN='\033[0;36m'
export COLOR_LIGHTCYAN='\033[1;36m'
export COLOR_DEFAULT='\033[0m'

# Git completion
[ -f "$HOME/.git_completion.sh" ] && . "$HOME/.git_completion.sh"

# For gist(1)
export GITHUB_TOKEN=`security find-generic-password -gs github.token 2>&1 | egrep '^password: ' | sed 's/^password: "\(.*\)"$/\1/'`

# Save these so we can check against them in later prompts
export __NORMAL_USER=$USER
export __NORMAL_HOST=$HOSTNAME

function __make_prompt() {
  # This has to come first
  local RET=$?

  # Only set these colors if we are on a color terminal
  case $TERM in
    xterm*|rxvt|vt100|screen)
      local PROMPT_COLOR=$COLOR_GREEN
      local WARN_COLOR=$COLOR_RED
      local CLEAR_COLOR=$COLOR_DEFAULT
      ;;
  esac

  if [ $RET -ne 0 ]; then
    local FACE_PART="${WARN_COLOR}:(${CLEAR_COLOR}\n"
  fi

  if [ $USER != $__NORMAL_USER ]; then
    local PROMPT_USER_PART='\u'
  fi

  if [ `hostname` != $__NORMAL_HOST ]; then
    local PROMPT_HOST_PART='@\h '
  fi

  if [ -n "${PROMPT_USER_PART}" ] || [ -n "${PROMPT_HOST_PART}" ]; then
    local OPTIONAL_SPACE=' '
  fi

  # Uses Shawn O. Pearce's .git_completion.sh (loaded in .bash_profile)
  type "__git_ps1" &> /dev/null
  if [ $? -eq 0 ]; then
    local GIT_PART=`__git_ps1 ":%s"`
  fi

  # Non-printing chars must be surrounded by \[ and \] to tell bash that
  # they don't take up any space.  Otherwise wrapping will be whacked.
  PS1="${FACE_PART}\[${PROMPT_COLOR}\][${PROMPT_USER_PART}${PROMPT_HOST_PART}${OPTIONAL_SPACE}\W${GIT_PART}]\[${CLEAR_COLOR}\] "
}

# XXX Pass this function down to child processes, otherwise new shells opened
# will get the PROMPT_COMMAND but not the function necessary to make it work.
export PROMPT_COMMAND='__make_prompt'
export -f __make_prompt
