# -*- mode: sh; -*-

# .bashrc
# This file is sourced by bash to create the prompt

# Source global definitions
if [ -f /etc/bashrc ]; then
    . /etc/bashrc
fi

# Exit if this is not an interactive shell
if [ -z "$PS1" ]; then
    return
fi

# Aliases
case `uname -s` in
    Darwin|*BSD*)
        alias ls='ls -G'                      # colorize `ls` output (BSD/Mac version)
        ;;
    *)
        eval `dircolors -b`                   # colorize `ls` output (GNU version)
        alias ls='ls --color=auto'
        ;;
esac

alias lsd='ls -F | grep \/ | sort'            # list only dirs, alphabetically
alias rmb='rm *~'                             # remove emacs backup files
alias rmbr="find . -name '*~' -exec rm {} \;" # recursive version of above
alias ssh='ssh -C'                            # enable compression
alias e='emacsclient'

# Configure Colors:
export COLOR_WHITE='\033[1;37m'
export COLOR_LIGHTGRAY='033[0;37m'
export COLOR_GRAY='\033[1;30m'
export COLOR_BLACK='\033[0;30m'
export COLOR_RED='\033[0;31m'
export COLOR_LIGHTRED='\033[1;31m'
export COLOR_GREEN='\033[0;32m'
export COLOR_LIGHTGREEN='\033[1;32m'
export COLOR_BROWN='\033[0;33m'
export COLOR_YELLOW='\033[1;33m'
export COLOR_BLUE='\033[0;34m'
export COLOR_LIGHTBLUE='\033[1;34m'
export COLOR_PURPLE='\033[0;35m'
export COLOR_PINK='\033[1;35m'
export COLOR_CYAN='\033[0;36m'
export COLOR_LIGHTCYAN='\033[1;36m'
export COLOR_DEFAULT='\033[0m'

# Save these so we can check against them in later prompts
export __NORMAL_USER=$USER
export __NORMAL_HOST=$HOSTNAME

function __make_prompt() {
    # This has to come first
    local RET=$?

    # Only set these colors if we are on a color terminal
    case $TERM in
        xterm*|rxvt)
            local PROMPT_COLOR=$COLOR_GREEN
            local CLEAR_COLOR=$COLOR_DEFAULT
            ;;
    esac

    if [ $RET -ne 0 ]; then
        local FACE_PART="${COLOR_RED}:(${CLEAR_COLOR}\n"
    fi

    if [ $USER != $__NORMAL_USER ]; then
        local PROMPT_USER_PART='\u'
    fi

    if [ `hostname` != $__NORMAL_HOST ]; then
        local PROMPT_HOST_PART='@\h '
    fi

    if [ -n "${PROMPT_USER_PART}" ] || [ -n "${PROMPT_HOST_PART}" ]; then
        local OPTIONAL_SPACE=' '
    fi

    # Non-printing chars must be surrounded by \[ and \] to tell bash that
    # they don't take up any space.  Otherwise wrapping will be whacked.
    PS1="${FACE_PART}\[${PROMPT_COLOR}\][${PROMPT_USER_PART}${PROMPT_HOST_PART}${OPTIONAL_SPACE}\W]\[${CLEAR_COLOR}\] "
}

# XXX Pass this function down to child processes, otherwise new shells opened
# will get the PROMPT_COMMAND but not the function necessary to make it work.
export PROMPT_COMMAND='__make_prompt'
export -f __make_prompt
