# -*- mode: sh; -*-

# .bashrc
# This file is sourced by bash to create the prompt

# Source global definitions
if [ -f /etc/bashrc ]; then
    . /etc/bashrc
fi

# Aliases
alias e='emacsclient'
#eval `dircolors -b`
#alias ls='ls --color=auto'
alias ls='ls -G'                              # colorize `ls` output (Mac version)
alias lsd='ls -F | grep \/ | sort'            # list only dirs, alphabetically
alias rmb='rm *~'                             # remove emacs backup files
alias rmbr="find . -name '*~' -exec rm {} \;" # recursive version of above
alias ssh='ssh -C'                            # enable compression

# TODO Change this so that I only show the username if not my normal one and I
# only show the hostname if it's not my localhost.  Definitely nice to
# highlight if they are root (maybe a red # at the end?  Not a big concern on
# a mac though, since the root user is usually disabled).

# Configure Colors:
COLOR_WHITE='\033[1;37m'
COLOR_LIGHTGRAY='033[0;37m'
COLOR_GRAY='\033[1;30m'
COLOR_BLACK='\033[0;30m'
COLOR_RED='\033[0;31m'
COLOR_LIGHTRED='\033[1;31m'
COLOR_GREEN='\033[0;32m'
COLOR_LIGHTGREEN='\033[1;32m'
COLOR_BROWN='\033[0;33m'
COLOR_YELLOW='\033[1;33m'
COLOR_BLUE='\033[0;34m'
COLOR_LIGHTBLUE='\033[1;34m'
COLOR_PURPLE='\033[0;35m'
COLOR_PINK='\033[1;35m'
COLOR_CYAN='\033[0;36m'
COLOR_LIGHTCYAN='\033[1;36m'
COLOR_DEFAULT='\033[0m'

NORMAL_USER=cam
NORMAL_HOST=relm

function promptcmd() {
    if [ $? = 0 ]; then
        FACE_PART='';
    else
        FACE_PART="${COLOR_RED}:(${COLOR_DEFAULT}\n";
    fi

    # Select the prompt color based on the hostname
    case `hostname -s` in
        $NORMAL_HOST)
            export PROMPT_COLOR=$COLOR_GREEN;
            ;;
        *)
            export PROMPT_COLOR=$COLOR_PURPLE;
            ;;
    esac

    if [ $USER == 'root' ]; then
        PROMPT_COLOR=$COLOR_RED;
    fi

    if [ $USER == $NORMAL_USER ] && [ `hostname -s` == $NORMAL_HOST ]; then
        PROMPT_HOST_PART='';
    else
        PROMPT_HOST_PART='\u@\h ';
    fi

    # Non-printing chars must be surrounded by \[ and \] to tell bash that
    # they don't take up any space.  Otherwise wrapping will be whacked.
    export PS1="${FACE_PART}\[${PROMPT_COLOR}\][${PROMPT_HOST_PART}\W]\[${COLOR_DEFAULT}\] ";
}

# TODO if you su to a user who doesn't have this script, PROMPT_COMMAND is
# still set but promptcmd doesn't exist to run.  Either unset globally
# or find a better solution.

# TODO unset all these variables

# Determine of this is an interactive shell and run dependent commands
case "$-" in
    *i*)
  # This is an interactive shell, so feel free to echo

  # If I have a TODO file, then print it out
  #  if [ -r ~/TODO ]; then
  #    echo -e "\e[4mTODO\e[0m";
  #    cat -n ~/TODO;
  #  fi;
        ;;
    *)
  # Do nothing as this is a non-interactive shell
        ;;
esac

export PROMPT_COMMAND=promptcmd
